// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2129.swRobotics2016b.subsystems;

import org.usfirst.frc2129.swRobotics2016b.Robot;
import org.usfirst.frc2129.swRobotics2016b.RobotMap;
import org.usfirst.frc2129.swRobotics2016b.commands.*;
import edu.wpi.first.wpilibj.Jaguar;
import edu.wpi.first.wpilibj.SpeedController;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class SubsystemSpinners extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController motorSpinnerLeft = RobotMap.subsystemSpinnersMotorSpinnerLeft;
    private final SpeedController motorSpinnerRight = RobotMap.subsystemSpinnersMotorSpinnerRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        Robot.preferences.putDouble("PowerSpinnerInput", 0.5);
        Robot.preferences.putDouble("PowerSpinnerOutput", -1.0);
        Robot.preferences.putDouble("PowerSpinnerOutputLow", -0.25);
    }
    
    //Set spinner motors for intake
    public void spinForInput() {
    	//spinSpeed = Robot.preferences
    	double PowerSpinnerInput = Robot.preferences.getDouble("PowerSpinnerInput", 0.5);
    	motorSpinnerLeft.set(PowerSpinnerInput);
    	motorSpinnerRight.set(PowerSpinnerInput);
    }
    
    //Set spinner motors for output
    public void spinForOutPut() {
    	double PowerSpinnerOutput = Robot.preferences.getDouble("PowerSpinnerOutput", -1.0);
    	motorSpinnerLeft.set(PowerSpinnerOutput);
    	motorSpinnerRight.set(PowerSpinnerOutput);
    }
    
    public void spinForLowGoal() {
    	double PowerSpinnerOutputLow = Robot.preferences.getDouble("PowerSpinnerOutputLow", -0.25);
    	motorSpinnerLeft.set(PowerSpinnerOutputLow);
    	motorSpinnerRight.set(PowerSpinnerOutputLow);
    }
    
    //Set motors to stop
    public void spinStop() {
    	motorSpinnerLeft.set(0);
    	motorSpinnerRight.set(0);
    }
}

